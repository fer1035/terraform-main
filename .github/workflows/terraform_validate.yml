name: terraform

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: terraform
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        working-directory: terraform
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt
        run: terraform fmt -diff -check -recursive

      - name: Terraform Validate
        id: validate
        run: terraform validate

      # - name: Terraform Plan
      #   id: plan
      #   run: terraform plan
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      # - name: Update Pull Request
      #   uses: actions/github-script@0.9.0
      #   if: github.event_name == 'pull_request'
      #   env:
      #     VALIDATE: "terraform\n${{ steps.validate.outputs.stdout }}"
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
      #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
      #       #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

      #       <details><summary>Show Result</summary>

      #       \`\`\`\n
      #       ${process.env.VALIDATE}
      #       \`\`\`

      #       </details>

      #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })
  
      # - name: Terraform Validation Status
      #   if: steps.validate.outcome == 'failure'
      #   run: exit 1
